{"version":3,"file":"static/js/765.06db2fd1.chunk.js","mappings":"uRAKMA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,yIAwBhB,EAbiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,UCpBYE,EAAQL,EAAAA,QAAAA,IAAH,8DAKLM,EAAUN,EAAAA,QAAAA,QAAH,8FAMPO,EAAYP,EAAAA,QAAAA,IAAH,0CAITD,GAAaC,EAAAA,EAAAA,SAAOQ,EAAAA,GAAPR,CAAH,kFAOVS,EAAUT,EAAAA,QAAAA,IAAH,2F,UCyDpB,EArEqB,WAAO,IAAD,IACzB,GAA8BU,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAcpD,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAU,GAEV,IAAMC,EAAY,mCAAG,qGACIC,EAAAA,EAAAA,GAAY,UAAD,OAAWX,IAD1B,OACbY,EADa,QAEnBH,EAAAA,EAAAA,IAAU,GAEVV,EAAWa,EAASC,MAJD,2CAAH,qDAOlBH,GACD,GAAE,CAACV,KAEF,8BACGF,IACC,4BACE,SAACL,EAAD,WACE,UAACG,EAAD,YACE,UAACF,EAAD,YACE,SAAC,EAAD,CAAUL,GAAIe,EAAaU,QAA3B,SAAoC,UAElC,SAACtB,EAAD,CACEuB,IAAG,0CAAqCjB,EAAQkB,aAChDC,MAAO,MACPC,IAAKpB,EAAQqB,YAKnB,UAACzB,EAAD,YACE,wBAAKI,EAAQqB,SACb,yBAAG,eAAaC,KAAKC,MAAMvB,EAAQwB,cAAc,YACjD,uBAAG,cACH,uBAAIxB,EAAQyB,YACZ,uBAAG,YACH,uBAAIzB,EAAQ0B,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,iBAItD,SAAClC,EAAD,WACE,UAACC,EAAD,YACE,uBAAG,4BACH,2BACE,yBACE,SAAC,EAAD,CAAYL,GAAI,OAAhB,SAAwB,YAE1B,yBACE,SAAC,EAAD,CAAYA,GAAI,UAAhB,SAA2B,uBAKnC,SAACI,EAAD,WACE,SAACC,EAAD,WACE,SAAC,KAAD,YAOb,C,+CC7EKe,EAAY,SAAAmB,GAChB,OAAKA,EAGIC,EAAAA,QAAAA,SAAiB,CACtBC,gBAAiB,cACjBC,SAAU,WAJLF,EAAAA,QAAAA,QAOV,EAEDpB,EAAUuB,UAAY,CACpBJ,O,MAAQK,GAAAA,KAAAA,YAGV,K","sources":["components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","utils/Loading.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  color: #212121;\n\n  :hover {\n    color: orange;\n  }\n`;\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Image = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n\nexport const Section = styled.section`\n  &:not(:last-child) {\n    border-bottom: 2px solid lightgray;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 15px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: #212121;\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 420px) {\n    display: flex;\n  }\n`;\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport BackLink from '../../components/BackLink/BackLink';\nimport fetchMovies from 'services/moviesApi';\nimport {\n  Image,\n  Section,\n  Container,\n  StyledLink,\n  Wrapper,\n} from './MovieDetails.styled';\nimport isLoading from 'utils/Loading';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    isLoading(true);\n\n    const fetchDetails = async () => {\n      const response = await fetchMovies(`/movie/${movieId}`);\n      isLoading(false);\n\n      setDetails(response.data);\n    };\n\n    fetchDetails();\n  }, [movieId]);\n  return (\n    <>\n      {details && (\n        <div>\n          <Section>\n            <Wrapper>\n              <Container>\n                <BackLink to={backLinkHref.current}>Back</BackLink>\n                {\n                  <Image\n                    src={`https://image.tmdb.org/t/p/w185/${details.poster_path}`}\n                    width={'185'}\n                    alt={details.title}\n                  />\n                }\n              </Container>\n\n              <Container>\n                <h2>{details.title}</h2>\n                <p>User score: {Math.round(details.vote_average)} / 10</p>\n                <b>Overview</b>\n                <p>{details.overview}</p>\n                <b>Genres</b>\n                <p>{details.genres.map(({ name }) => name).join(', ')}</p>\n              </Container>\n            </Wrapper>\n          </Section>\n          <Section>\n            <Container>\n              <b>Additional information</b>\n              <ul>\n                <li>\n                  <StyledLink to={'cast'}>Cast</StyledLink>\n                </li>\n                <li>\n                  <StyledLink to={'reviews'}>Reviews</StyledLink>\n                </li>\n              </ul>\n            </Container>\n          </Section>\n          <Section>\n            <Container>\n              <Outlet />\n            </Container>\n          </Section>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport PropTypes from 'prop-types';\n\nconst isLoading = toggle => {\n  if (!toggle) {\n    return Loading.remove();\n  } else {\n    return Loading.standard({\n      backgroundColor: 'transparent',\n      svgColor: 'orange',\n    });\n  }\n};\n\nisLoading.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n};\n\nexport default isLoading;\n"],"names":["StyledLink","styled","Link","to","children","size","Image","Section","Container","NavLink","Wrapper","useState","details","setDetails","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","isLoading","fetchDetails","fetchMovies","response","data","current","src","poster_path","width","alt","title","Math","round","vote_average","overview","genres","map","name","join","toggle","Loading","backgroundColor","svgColor","propTypes","PropTypes"],"sourceRoot":""}