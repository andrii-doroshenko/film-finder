{"version":3,"file":"static/js/544.019338cc.chunk.js","mappings":"0OA0CA,UArCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACKC,EAAAA,EAAAA,GALP,wBAIE,OACZC,EADY,OAElBN,EAAUM,EAASC,KAAKC,UACxBC,EAAAA,EAAAA,IAAU,GAHQ,2CAAH,qDAMjBL,GACD,GAAE,KAGD,yBACGL,GACC,iCACE,wBAAI,wCACJ,wBACGA,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMd,GAA1C,SACGW,KAFID,EADC,UAUhBF,EAAAA,EAAAA,IAAU,IAIjB,C,0CCrCKA,EAAY,SAAAO,GAChB,OAAKA,EAGIC,EAAAA,QAAAA,SAAiB,cAFjBA,EAAAA,QAAAA,QAIV,EAEDR,EAAUS,UAAY,CACpBF,O,MAAQG,GAAAA,KAAAA,YAGV,K","sources":["pages/Home/Home.jsx","utils/Loading.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport fetchMovies from 'services/moviesApi';\nimport isLoading from 'utils/Loading';\n\nconst Home = () => {\n  const [trends, setTrends] = useState(null);\n  const trendsQuery = '/trending/movie/week';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      const response = await fetchMovies(trendsQuery);\n      setTrends(response.data.results);\n      isLoading(false);\n    };\n\n    fetchTrends();\n  }, []);\n\n  return (\n    <div>\n      {trends ? (\n        <>\n          <h1>The most popular movies this week:</h1>\n          <ul>\n            {trends.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        isLoading(true)\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport PropTypes from 'prop-types';\n\nconst isLoading = toggle => {\n  if (!toggle) {\n    return Loading.remove();\n  } else {\n    return Loading.standard('Loading...');\n  }\n};\n\nisLoading.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n};\n\nexport default isLoading;\n"],"names":["useState","trends","setTrends","location","useLocation","useEffect","fetchTrends","fetchMovies","response","data","results","isLoading","map","id","title","to","state","from","toggle","Loading","propTypes","PropTypes"],"sourceRoot":""}