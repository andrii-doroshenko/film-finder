{"version":3,"file":"static/js/41.057e0515.chunk.js","mappings":"2RAGaA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,gEAKVE,EAAcF,EAAAA,QAAAA,GAAH,wKAQXG,GAAUH,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,4PAgBPI,EAAQJ,EAAAA,QAAAA,GAAH,iDAILK,EAAQL,EAAAA,QAAAA,IAAH,iEAKLM,EAAON,EAAAA,QAAAA,GAAH,mF,SCJjB,EA3BmB,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAmB,EAAZC,MACrC,OACE,UAACR,EAAD,YACE,UAACD,EAAD,YACE,SAACN,EAAD,CAAYgB,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAAhD,UACE,gBACEU,IAAG,0CAAqCN,GACxCO,MAAO,MACPC,OAAQ,MACRC,IAAKR,OAGT,SAACV,EAAD,CAASY,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,SAE/C,SAACJ,EAAD,UAAQS,MAZCF,EAed,KAGN,ECjCYW,EAAYtB,EAAAA,QAAAA,IAAH,uEAKTI,EAAQJ,EAAAA,QAAAA,GAAH,sDC+BlB,EAhCa,WACX,OAA4BuB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBC,EAAAA,EAAAA,IAAU,GADQ,UAEKC,EAAAA,EAAAA,GAAY,wBAFjB,UAIY,KAFxBC,EAFY,QAILC,KAAKC,QAJA,uBAKhBJ,EAAAA,EAAAA,IAAU,GALM,2BASlBA,EAAAA,EAAAA,IAAU,GACVH,EAAUK,EAASC,KAAKC,SAVN,2CAAH,qDAajBL,GACD,GAAE,KAGD,yBACGH,IACC,UAACF,EAAD,YACE,SAAC,EAAD,UAAO,8BACP,SAAC,EAAD,CAAYf,OAAQiB,QAK7B,C,+CCjCKI,EAAY,SAAAK,GAChB,OAAKA,EAGIC,EAAAA,QAAAA,SAAiB,CACtBC,gBAAiB,cACjBC,SAAU,WAJLF,EAAAA,QAAAA,QAOV,EAEDN,EAAUS,UAAY,CACpBJ,O,MAAQK,GAAAA,KAAAA,YAGV,K","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","utils/Loading.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  max-width: 185px;\n`;\n\nexport const PopularList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n  padding: 0;\n  align-items: stretch;\n  list-style: none;\n`;\n\nexport const Overlay = styled(Link)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.75);\n  transition: opacity 0.2s ease-in-out;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 5px 0 15px 0;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  height: 278px;\n`;\n\nexport const Item = styled.li`\n  margin: 0 auto;\n  width: 185px;\n  border-radius: 4px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  StyledLink,\n  PopularList,\n  Item,\n  Overlay,\n  Thumb,\n  Title,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <PopularList>\n      {movies.map(({ id, poster_path, title, adult }) => {\n        return (\n          <Item key={id}>\n            <Thumb>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w185/${poster_path}`}\n                  width={'185'}\n                  height={'278'}\n                  alt={title}\n                />\n              </StyledLink>\n              <Overlay to={`/movies/${id}`} state={{ from: location }} />\n            </Thumb>\n            <Title>{title}</Title>\n          </Item>\n        );\n      })}\n    </PopularList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport const Title = styled.h1`\n  text-transform: uppercase;\n`;\n","import { useEffect, useState } from 'react';\nimport fetchMovies from 'services/moviesApi';\nimport isLoading from 'utils/Loading';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Container, Title } from './Home.styled';\n\nconst Home = () => {\n  const [trends, setTrends] = useState(null);\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      isLoading(true);\n      const response = await fetchMovies('/trending/movie/week');\n\n      if (response.data.results === 0) {\n        isLoading(false);\n        return;\n      }\n\n      isLoading(false);\n      setTrends(response.data.results);\n    };\n\n    fetchTrends();\n  }, []);\n\n  return (\n    <div>\n      {trends && (\n        <Container>\n          <Title>Popular movies this week</Title>\n          <MoviesList movies={trends} />\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport PropTypes from 'prop-types';\n\nconst isLoading = toggle => {\n  if (!toggle) {\n    return Loading.remove();\n  } else {\n    return Loading.standard({\n      backgroundColor: 'transparent',\n      svgColor: 'orange',\n    });\n  }\n};\n\nisLoading.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n};\n\nexport default isLoading;\n"],"names":["StyledLink","styled","Link","PopularList","Overlay","Title","Thumb","Item","movies","location","useLocation","map","id","poster_path","title","adult","to","state","from","src","width","height","alt","Container","useState","trends","setTrends","useEffect","fetchTrends","isLoading","fetchMovies","response","data","results","toggle","Loading","backgroundColor","svgColor","propTypes","PropTypes"],"sourceRoot":""}